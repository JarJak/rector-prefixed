includes:
    - utils/phpstan-extensions/config/phpstan-extensions.neon
    - vendor/phpstan/phpstan/conf/bleedingEdge.neon
    - vendor/symplify/phpstan-extensions/config/config.neon
    - vendor/symplify/phpstan-rules/config/static-rules.neon
    - vendor/symplify/phpstan-rules/config/services/services.neon
    - vendor/symplify/phpstan-rules/packages/cognitive-complexity/config/cognitive-complexity-services.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/array-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/code-complexity-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/static-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/doctrine-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/naming-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/regex-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/symfony-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/test-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/services-rules.neon
    - vendor/symplify/phpstan-rules/config/symplify-rules/string-to-constant-rules.neon

services:
    -
        class: Symplify\PHPStanRules\Rules\RequireClassTypeInClassMethodByTypeRule
        tags:
            - phpstan.rules.rule

        arguments:
            requiredTypeInMethodByClass:
                Rector\Core\Contract\Rector\PhpRectorInterface:
                    getNodeTypes: PhpParser\Node

    -
        class: Symplify\PHPStanRules\CognitiveComplexity\Rules\FunctionLikeCognitiveComplexityRule
        tags:
            - phpstan.rules.rule

        arguments:
            maxMethodCognitiveComplexity: 9

    -
        class: Symplify\PHPStanRules\CognitiveComplexity\Rules\ClassLikeCognitiveComplexityRule
        tags:
            - phpstan.rules.rule

        arguments:
            maxClassCognitiveComplexity: 50
            limitsByTypes:
                Rector\Core\Rector\AbstractRector: 40
                Symfony\Component\Console\Command\Command: 40
                PHPStan\Rule\Rule: 30

    -
        class: Symplify\PHPStanRules\Rules\RequireMethodCallArgumentConstantRule
        tags:
            - phpstan.rules.rule

        arguments:
            constantArgByMethodByType:
                Symfony\Component\Console\Command\Command:
                    addArgument:
                        - 0

                    addOption:
                        - 0

                Symfony\Component\Console\Input\InputInterface:
                    getOption:
                        - 0

                    getArgument:
                        - 0

                PhpParser\Node:
                    getAttribute:
                        - 0

                    setAttribute:
                        - 0

    -
        class: Symplify\PHPStanRules\Rules\SeeAnnotationToTestRule
        tags:
            - phpstan.rules.rule

        arguments:
            requiredSeeTypes:
                - PHPStan\Rules\Rule
                - Rector\Core\Rector\AbstractRector
                - Rector\FileSystemRector\Rector\AbstractFileSystemRector

    -
        class: Symplify\PHPStanRules\Rules\NoStaticCallRule
        tags:
            - phpstan.rules.rule

        arguments:
            allowedStaticCallClasses:
                - PHPStan\Type\VerbosityLevel
                - Rector\NodeTypeResolver\ClassExistenceStaticHelper

    -
        class: Symplify\PHPStanRules\Rules\RequireStringArgumentInMethodCallRule
        tags:
            - phpstan.rules.rule

        arguments:
            stringArgByMethodByType:
                Rector\Core\Rector\AbstractRector:
                    isObjectType:
                        - 1

    -
        class: Symplify\PHPStanRules\Rules\ClassNameRespectsParentSuffixRule
        tags:
            - phpstan.rules.rule

        arguments:
            parentClasses:
                - Rector

parameters:
    level: max
    paths:
        - bin
        - src
        - rules
        - packages
        - tests
        - utils

    bootstrapFiles:
        - vendor/symfony/dependency-injection/Loader/Configurator/ContainerConfigurator.php

    scanDirectories:
        - stubs

    reportUnmatchedIgnoredErrors: false
    checkGenericClassInNonGenericObjectType: false
    excludes_analyse:
        - */config.php
        - packages/*/config/*
        - tests/debug_functions.php
        - packages/better-php-doc-parser/src/ValueObject/PhpDocNode/AbstractTagValueNode.php
        - packages/file-system-rector/src/Rector/AbstractFileSystemRector.php
        - packages/testing/src/PHPUnit/*.php
        - packages/node-type-resolver/tests/NodeVisitor/FunctionMethodAndClassNodeVisitor/FunctionMethodAndClassNodeVisitorTest.php
        - utils/phpstan-extensions/src/Rule/KeepRectorNamespaceForRectorRule.php
        - packages/rector-generator/templates/*
        - packages/symfony-php-config/*
        - packages/simple-php-doc-parser
        - packages/doctrine-annotation-generated/src/ConstantPreservingDocParser.php
        - packages/doctrine-annotation-generated/src/ConstantPreservingAnnotationReader.php
        - */Expected/*
        - *tests/Rector/MethodCall/RenameMethodRector/**/SomeClass.php
        - *tests/*/Fixture/*
        - *tests/*/Source/*
        - *tests/Source/*
        - */tests/Rector/Psr4/MultipleClassFileToPsr4ClassesRector/Expected/Just*ExceptionWithoutNamespace.php
        - tests/DependencyInjection/config

    ignoreErrors:
        - "#PHPDoc tag \\@param for parameter \\$node with type float is incompatible with native type PhpParser\\\\Node#"
        - "#Parameter \\#1 (.*?) expects Symfony\\\\Component\\\\DependencyInjection\\\\ContainerBuilder, Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface given#"
        - "#Strict comparison using === between string and null will always evaluate to false#"
        - "#Array \\(array<PhpParser\\\\Node\\\\Stmt>\\) does not accept PhpParser\\\\Node#"
        - "#Call to function in_array\\(\\) with arguments string, (.*?) and true will always evaluate to false#"
        - "#Access to an undefined property PhpParser\\\\Node\\\\Expr::\\$right#"
        - "#Access to an undefined property PhpParser\\\\Node\\\\Expr\\\\MethodCall\\|PhpParser\\\\Node\\\\Stmt\\\\ClassMethod::\\$params#"
        - "#Cannot call method getName\\(\\) on PHPStan\\\\Reflection\\\\ClassReflection\\|null#"
        - "#Method Rector\\\\CodeQuality\\\\Rector\\\\Foreach_\\\\SimplifyForeachToCoalescingRector\\:\\:matchReturnOrAssignNode\\(\\) should return PhpParser\\\\Node\\\\Expr\\\\Assign\\|PhpParser\\\\Node\\\\Stmt\\\\Return_\\|null but returns PhpParser\\\\Node\\|null#"
        - "#Access to an undefined property PhpParser\\\\Node::\\$(\\w+)#"
        - "#Parameter \\#2 \\$codeSamples of class Rector\\\\Core\\\\RectorDefinition\\\\RectorDefinition constructor expects array<Rector\\\\Core\\\\Contract\\\\RectorDefinition\\\\CodeSampleInterface>, array<int, stdClass> given#"
        - "#Cannot access property \\$value on PhpParser\\\\Node\\\\Expr\\\\ArrayItem\\|null#"
        - "#Strict comparison using === between PhpParser\\\\Node\\\\Expr and null will always evaluate to false#"
        - "#Access to an undefined property PhpParser\\\\Node\\\\Stmt\\:\\:\\$expr#"
        - "#Cannot access property \\$stmts on PhpParser\\\\Node\\\\Stmt\\\\Else_\\|null#"
        - "#Method Rector\\\\(.*?) should return array<PhpParser\\\\Node\\\\(.*?)> but returns array<PhpParser\\\\Node\\>#"
        - "#(.*?)(AttributeAwareNodeInterface|AttributeAware(.*?)TagValueNode)(.*?)#"
        - "#Parameter \\#1 \\$children of class PHPStan\\\\PhpDocParser\\\\Ast\\\\PhpDoc\\\\PhpDocNode constructor expects array<PHPStan\\\\PhpDocParser\\\\Ast\\\\PhpDoc\\\\PhpDocChildNode\\>, array<int, PHPStan\\\\PhpDocParser\\\\Ast\\\\Node\\> given#"
        - "#Method Rector\\\\PHPUnit\\\\Rector\\\\MethodCall\\\\ReplaceAssertArraySubsetRector\\:\\:matchArray\\(\\) should return PhpParser\\\\Node\\\\Expr\\\\Array_\\|null but returns PhpParser\\\\Node\\\\Expr#"
        - "#(.*?)PhpParser\\\\Node\\\\Expr\\\\Error\\|PhpParser\\\\Node\\\\Expr\\\\Variable given#"
        - "#Unreachable statement \\- code above always terminates#"
        - "#Negated boolean expression is always true#"
        - "#Strict comparison using \\=\\=\\= between PhpParser\\\\Node and null will always evaluate to false#"
        - "#Access to an undefined property PhpParser\\\\Node\\\\Expr\\\\Error\\|PhpParser\\\\Node\\\\Expr\\\\Variable\\:\\:\\$name#"
        - "#Strict comparison using \\=\\=\\= between PhpParser\\\\Node\\\\Expr\\\\ArrayItem and null will always evaluate to false#"
        - "#Parameter \\#2 \\.\\.\\.\\$args of function array_merge expects array, array<int, string\\>\\|false given#"
        - "#Access to an undefined property PhpParser\\\\Node\\\\Expr\\:\\:\\$args#"
        - "#Parameter \\#2 \\$name of method Rector\\\\Core\\\\Rector\\\\AbstractRector\\:\\:isName\\(\\) expects string, string\\|null given#"
        - "#Parameter (.*?) expects array<PhpParser\\\\Node\\\\Stmt\\>, array<PhpParser\\\\Node\\> given#"
        - "#Cannot cast array<string\\>\\|bool\\|string\\|null to string#"
        - "#If condition is always true#"
        - "#Ternary operator condition is always true#"
        - "#Access to an undefined property PhpParser\\\\Node\\\\FunctionLike\\|PhpParser\\\\Node\\\\Stmt\\\\ClassLike\\:\\:\\$stmts#"
        - "#Property Rector\\\\TypeDeclaration\\\\TypeInferer\\\\(.*?)\\:\\:\\$(.*?)TypeInferers \\(array<Rector\\\\TypeDeclaration\\\\Contract\\\\TypeInferer\\\\(.*?)TypeInfererInterface\\>\\) does not accept array<Rector\\\\TypeDeclaration\\\\Contract\\\\TypeInferer\\\\PriorityAwareTypeInfererInterface\\>#"
        - "#Property PhpParser\\\\Node\\\\Scalar\\\\DNumber\\:\\:\\$value \\(float\\) does not accept string#"
        - "#Call to function is_string\\(\\) with float will always evaluate to false#"
        - "#Method Rector\\\\NodeTypeResolver\\\\PHPStan\\\\Type\\\\TypeFactory\\:\\:createUnionOrSingleType\\(\\) should return PHPStan\\\\Type\\\\MixedType\\|PHPStan\\\\Type\\\\UnionType but returns PHPStan\\\\Type\\\\Type#"
        -
            message: "#Class Rector\\\\Generic\\\\Tests\\\\Rector\\\\StaticCall\\\\SwapClassMethodArgumentsRector\\\\Fixture\\\\SomeClass not found#"
            path: rules/generic/tests/Rector/StaticCall/SwapClassMethodArgumentsRector/SwapClassMethodArgumentsRectorTest.php

        - "#Class \"Rector\\\\Utils\\\\(.*?)\" is missing @see annotation with test case class reference#"
        - "#Offset int\\|string\\|null does not exist on array<PhpParser\\\\Node\\\\Stmt>\\|null#"
        - "#class-string<T of object>\\|T of object#"
        - "#Offset 0 does not exist on array<PhpParser\\\\Node\\\\Stmt>\\|null#"
        - "#Parameter \\#1 \\$left of class PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Spaceship constructor expects PhpParser\\\\Node\\\\Expr, PhpParser\\\\Node\\\\Expr\\|null given#"
        - "#Parameter \\#2 \\$right of class PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Spaceship constructor expects PhpParser\\\\Node\\\\Expr, PhpParser\\\\Node\\\\Expr\\|null given#"
        - "#Comparison operation \"<\" between 0 and 2 is always true#"
        - "#Method Rector\\\\Symfony\\\\Rector\\\\MethodCall\\\\AbstractToConstructorInjectionRector\\:\\:getServiceTypeFromMethodCallArgument\\(\\) should return PHPStan\\\\Type\\\\Type but returns PHPStan\\\\Type\\\\Type\\|null#"
        - "#Parameter \\#1 \\$expected of method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\) expects class\\-string<object\\>, string given#"
        - "#Unable to resolve the template type ExpectedType in call to method PHPUnit\\\\Framework\\\\Assert\\:\\:assertInstanceOf\\(\\)#"
        - "#Method (.*?) returns bool type, so the name should start with is/has/was#"
        - "#In method \"Rector\\\\BetterPhpDocParser\\\\AnnotationReader\\\\NodeAnnotationReader\\:\\:createPropertyReflectionFromPropertyNode\", caught \"Throwable\" must be rethrown\\. Either catch a more specific exception or add a \"throw\" clause in the \"catch\" block to propagate the exception\\. More info\\: http\\://bit\\.ly/failloud#"
        - "#Result of \\|\\| is always true#"
        - "#Parameter \\#2 \\$name of class PhpParser\\\\Node\\\\Expr\\\\MethodCall constructor expects PhpParser\\\\Node\\\\Expr\\|PhpParser\\\\Node\\\\Identifier\\|string, string\\|null given#"
        - "#Parameter \\#1 \\$eventListenerTag of method Rector\\\\SymfonyCodeQuality\\\\Rector\\\\Class_\\\\EventListenerToEventSubscriberRector\\:\\:createEventItem\\(\\) expects Rector\\\\Symfony\\\\ValueObject\\\\Tag\\\\EventListenerTag, Rector\\\\Symfony\\\\Contract\\\\Tag\\\\TagInterface given#"
        - "#Method Rector\\\\BetterPhpDocParser\\\\PhpDocInfo\\\\PhpDocInfoFactory\\:\\:parseTokensToPhpDocNode\\(\\) should return Rector\\\\AttributeAwarePhpDoc\\\\Ast\\\\PhpDoc\\\\AttributeAwarePhpDocNode but returns PHPStan\\\\PhpDocParser\\\\Ast\\\\PhpDoc\\\\PhpDocNode#"
        - "#Call to an undefined method PHPStan\\\\Type\\\\Type\\:\\:getClassName\\(\\)#"
        - "#Parameter \\#1 \\$typeNode of method Rector\\\\StaticTypeMapper\\\\StaticTypeMapper\\:\\:mapPHPStanPhpDocTypeNodeToPHPStanType\\(\\) expects PHPStan\\\\PhpDocParser\\\\Ast\\\\Type\\\\TypeNode, PHPStan\\\\PhpDocParser\\\\Ast\\\\Node given#"
        - "#Parameter \\#1 \\$sprintfFuncCall of method Rector\\\\Core\\\\PhpParser\\\\NodeTransformer\\:\\:transformSprintfToArray\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\FuncCall, PhpParser\\\\Node given#"
        - "#Parameter \\#1 \\$nodes of method Rector\\\\Core\\\\PhpParser\\\\Node\\\\BetterNodeFinder\\:\\:find\\(\\) expects array<PhpParser\\\\Node\\>\\|PhpParser\\\\Node, array<PhpParser\\\\Node\\\\Stmt\\>\\|null given#"
        - "#Method Rector\\\\SOLID\\\\Reflection\\\\ParentConstantReflectionResolver\\:\\:(.*?)\\(\\) should return ReflectionClassConstant\\|null but returns ReflectionClassConstant\\|false#"
        - "#Parameter \\#1 \\$firstStmt of method Rector\\\\Generic\\\\Rector\\\\ClassMethod\\\\NormalToFluentRector\\:\\:isBothMethodCallMatch\\(\\) expects PhpParser\\\\Node\\\\Stmt\\\\Expression, PhpParser\\\\Node\\\\Stmt given#"
        - "#Method Rector\\\\Core\\\\Rector\\\\AbstractRector\\:\\:wrapToArg\\(\\) should return array<PhpParser\\\\Node\\\\Arg\\> but returns array<PhpParser\\\\Node\\\\Arg\\|PhpParser\\\\Node\\\\Expr\\>#"
        - "#Cannot call method (.*?)\\(\\) on Rector\\\\BetterPhpDocParser\\\\PhpDocInfo\\\\PhpDocInfo\\|null#"
        - "#Parameter \\#(.*?) (.*?) of class PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\(.*?) constructor expects PhpParser\\\\Node\\\\Expr, PhpParser\\\\Node given#"
        - "#Access to an undefined property PHPStan\\\\PhpDocParser\\\\Ast\\\\PhpDoc\\\\PhpDocTagValueNode\\:\\:\\$description#"
        - "#Method Rector\\\\Php80\\\\Rector\\\\NotIdentical\\\\StrContainsRector\\:\\:matchNotIdenticalToFalse\\(\\) should return PhpParser\\\\Node\\\\Expr\\\\FuncCall\\|null but returns PhpParser\\\\Node\\\\Expr#"
        - "#Parameter \\#2 \\$name of method Rector\\\\Core\\\\Rector\\\\AbstractRector\\:\\:isVariableName\\(\\) expects string, string\\|null given#"
        - "#Cannot call method getParentNode\\(\\) on Rector\\\\DeadCode\\\\ValueObject\\\\VariableNodeUse\\|null#"
        - "#Parameter \\#2 \\$name of method Rector\\\\NodeNameResolver\\\\NodeNameResolver\\:\\:isName\\(\\) expects string, string\\|null given#"
        - "#Parameter \\#1 \\$keyName of method Rector\\\\AttributeAwarePhpDoc\\\\Ast\\\\Type\\\\AttributeAwareArrayShapeItemNode\\:\\:createKeyWithSpacePattern\\(\\) expects PHPStan\\\\PhpDocParser\\\\Ast\\\\ConstExpr\\\\ConstExprIntegerNode\\|PHPStan\\\\PhpDocParser\\\\Ast\\\\Type\\\\IdentifierTypeNode\\|null, PHPStan\\\\PhpDocParser\\\\Ast\\\\ConstExpr\\\\ConstExprIntegerNode\\|PHPStan\\\\PhpDocParser\\\\Ast\\\\ConstExpr\\\\ConstExprStringNode\\|PHPStan\\\\PhpDocParser\\\\Ast\\\\Type\\\\IdentifierTypeNode\\|null given#"
        - "#Method Rector\\\\Caching\\\\Detector\\\\ChangedFilesDetector\\:\\:hashFile\\(\\) should return string but returns string\\|false#"
        - "#If condition is always false#"
        - "#Parameter \\#1 \\$funcCall of method Rector\\\\Php80\\\\MatchAndRefactor\\\\StrStartsWithMatchAndRefactor\\\\AbstractMatchAndRefactor\\:\\:createStrStartsWithValueObjectFromFuncCall\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\FuncCall, PhpParser\\\\Node\\\\Expr given#"
        - "#Method Rector\\\\Naming\\\\Naming\\\\PropertyNaming\\:\\:resolveShortClassName\\(\\) should return string but returns string\\|null#"
        -
            message: "#in iterable type Iterator#"
            paths:
                - *Test.php
                - *TestCase.php

        -
            message: "#^Cognitive complexity for \"Rector\\\\BetterPhpDocParser\\\\Printer\\\\WhitespaceDetector\\:\\:detectOldWhitespaces\\(\\)\" is 18, keep it under 9$#"
            count: 1
            path: packages/better-php-doc-parser/src/Printer/WhitespaceDetector.php

        -
            message: "#^Parameter \\#1 \\$input of function array_splice expects array, array\\<PhpParser\\\\Node\\\\Stmt\\>\\|null given\\.$#"
            count: 1
            path: rules/coding-style/src/Rector/ClassMethod/NewlineBeforeNewAssignSetRector.php

        -
            message: "#^Cognitive complexity for \"Rector\\\\PhpSpecToPHPUnit\\\\Rector\\\\MethodCall\\\\PhpSpecPromisesToPHPUnitAssertRector\\:\\:refactor\\(\\)\" is 13, keep it under 9$#"
            count: 1
            path: rules/php-spec-to-phpunit/src/Rector/MethodCall/PhpSpecPromisesToPHPUnitAssertRector.php

        -
            message: "#Use explicit property fetch names over dynamic#"
            path: packages/doctrine-annotation-generated/src/PhpDocNode/ConstantReferenceIdentifierRestorer.php

        - "#^Cognitive complexity for \"Rector\\\\Php70\\\\EregToPcreTransformer\\:\\:(.*?)\" is (.*?), keep it under 9$#"
        - "#In method \"Rector\\\\Utils\\\\ProjectValidator\\\\Process\\\\ParallelTaskRunner\\:\\:(.*?)\", caught \"Throwable\" must be rethrown\\. Either catch a more specific exception or add a \"throw\" clause in the \"catch\" block to propagate the exception#"
        - "#Method (.*?) specified in iterable type Symfony\\\\Component\\\\Process\\\\Process#"
        - "#Cannot cast PhpParser\\\\Node\\\\Expr\\\\Error\\|PhpParser\\\\Node\\\\Identifier to string#"
        - "#Parameter \\#1 \\$node of method Rector\\\\PostRector\\\\Collector\\\\NodesToAddCollector\\:\\:wrapToExpression\\(\\) expects PhpParser\\\\Node\\\\Expr\\|PhpParser\\\\Node\\\\Stmt, PhpParser\\\\Node given#"
        - "#Access to an undefined property PhpParser\\\\Node\\\\Expr\\:\\:\\$class#"
        - "#Method Rector\\\\BetterPhpDocParser\\\\Tests\\\\PhpDocParser\\\\AbstractPhpDocInfoTest\\:\\:parseFileAndGetFirstNodeOfType\\(\\) should return PhpParser\\\\Node but returns PhpParser\\\\Node\\|null#"
        - "#Property PhpParser\\\\Node\\\\Stmt\\\\Namespace_\\:\\:\\$stmts \\(array<PhpParser\\\\Node\\\\Stmt\\>\\) does not accept array<PhpParser\\\\Node\\>#"
        - "#Cognitive complexity for \"Rector\\\\TypeDeclaration\\\\PHPStan\\\\Type\\\\ObjectTypeSpecifier\\:\\:matchShortenedObjectType\\(\\)\" is 10, keep it under 9#"
        - "#Parameter \\#1 \\$type of method PhpParser\\\\Builder\\\\FunctionLike\\:\\:setReturnType\\(\\) expects PhpParser\\\\Node\\\\Name\\|PhpParser\\\\Node\\\\NullableType\\|string, PhpParser\\\\Node\\\\Identifier\\|PhpParser\\\\Node\\\\Name\\|PhpParser\\\\Node\\\\NullableType\\|PhpParser\\\\Node\\\\UnionType given#"
        - "#Cognitive complexity for \"Rector\\\\Core\\\\PhpParser\\\\Node\\\\Value\\\\ValueResolver\\:\\:getValue\\(\\)\" is \\d+, keep it under 9#"
        - "#Cognitive complexity for \"Rector\\\\NetteKdyby\\\\ContributeEventClassResolver\\:\\:resolveGetterMethodByEventClassAndParam\\(\\)\" is \\d+, keep it under 9#"
        - "#Parameter \\#1 \\$type of class PhpParser\\\\Node\\\\NullableType constructor expects PhpParser\\\\Node\\\\Identifier\\|PhpParser\\\\Node\\\\Name\\|string, PhpParser\\\\Node\\\\Identifier\\|PhpParser\\\\Node\\\\Name\\|PhpParser\\\\Node\\\\NullableType\\|PhpParser\\\\Node\\\\UnionType given#"
        - "#Parameter \\#1 \\$object of function get_class expects object, PhpParser\\\\Node\\|null given#"
        - "#Class \"Rector\\\\FileSystemRector\\\\Rector\\\\Removing\\\\RemoveProjectFileRector\" is missing @see annotation with test case class reference#"
        - "#Parameter \\#1 \\$type of method PhpParser\\\\Builder\\\\Param\\:\\:setType\\(\\) expects PhpParser\\\\Node\\\\Name\\|PhpParser\\\\Node\\\\NullableType\\|PhpParser\\\\Node\\\\UnionType\\|string, PhpParser\\\\Node\\\\Identifier\\|PhpParser\\\\Node\\\\Name\\|PhpParser\\\\Node\\\\NullableType\\|PhpParser\\\\Node\\\\UnionType given#"
        - "#Parameter \\#1 \\$node of method Rector\\\\Core\\\\PhpParser\\\\Node\\\\BetterNodeFinder\\:\\:findFirstAncestorInstanceOf\\(\\) expects PhpParser\\\\Node, PhpParser\\\\Node\\\\Expr\\\\Variable\\|null given#"
        - "#Parameter \\#1 \\$objectType of method Rector\\\\Naming\\\\Naming\\\\PropertyNaming\\:\\:fqnToVariableName\\(\\) expects PHPStan\\\\Type\\\\ObjectType\\|string, PHPStan\\\\Type\\\\Type given#"
        - "#Property PhpParser\\\\Node\\\\Stmt\\\\Foreach_\\:\\:\\$valueVar \\(PhpParser\\\\Node\\\\Expr\\) does not accept PhpParser\\\\Node\\\\Expr\\|null#"
        - "#Access to an undefined property PHPStan\\\\PhpDocParser\\\\Ast\\\\PhpDoc\\\\PhpDocTagValueNode\\:\\:\\$type#"
        -
            message: "#Class \"Rector\\\\RectorGenerator\\\\Rector\\\\Closure\\\\AddNewServiceToSymfonyPhpConfigRector\" is missing @see annotation with test case class reference#"
            path: packages/rector-generator/src/Rector/Closure/AddNewServiceToSymfonyPhpConfigRector.php

        - "#Class Rector\\\\Renaming\\\\Tests\\\\Rector\\\\MethodCall\\\\RenameMethodRector\\\\Fixture\\\\SkipSelfMethodRename not found#"
        -
            message: "#Separate function \"Symfony\\\\Component\\\\DependencyInjection\\\\Loader\\\\Configurator\\\\ref\\(\\)\" in method call to standalone row to improve readability#"
            path: packages/rector-generator/config/config.php

        - "#Parameter \\#1 \\$shortControlString of method Rector\\\\NetteCodeQuality\\\\Rector\\\\Assign\\\\MakeGetComponentAssignAnnotatedRector\\:\\:resolveTypeFromShortControlNameAndVariable\\(\\) expects PhpParser\\\\Node\\\\Scalar\\\\String_, PhpParser\\\\Node\\\\Expr\\|null given#"
        - "#Parameter \\#1 \\$variable of class Rector\\\\Php70\\\\ValueObject\\\\VariableAssignPair constructor expects PhpParser\\\\Node\\\\Expr\\\\ArrayDimFetch\\|PhpParser\\\\Node\\\\Expr\\\\PropertyFetch\\|PhpParser\\\\Node\\\\Expr\\\\StaticPropertyFetch\\|PhpParser\\\\Node\\\\Expr\\\\Variable, PhpParser\\\\Node\\\\Expr given#"
        - "#Access to an undefined property PhpParser\\\\Node\\\\Expr\\:\\:\\$expr#"
        - "#Cognitive complexity for \"Rector\\\\DeadCode\\\\NodeManipulator\\\\LivingCodeManipulator\\:\\:keepLivingCodeFromExpr\\(\\)\" is \\d+, keep it under 9#"
        - "#Parameter \\#1 \\$files of method Symplify\\\\SmartFileSystem\\\\Finder\\\\FinderSanitizer\\:\\:sanitize\\(\\) expects \\(iterable<SplFileInfo\\|string\\>&Nette\\\\Utils\\\\Finder\\)\\|Symfony\\\\Component\\\\Finder\\\\Finder, array<string\\> given#"
        - "#Static property Rector\\\\Core\\\\Testing\\\\PHPUnit\\\\AbstractGenericRectorTestCase\\:\\:\\$allRectorContainer \\(Rector\\\\Naming\\\\Tests\\\\Rector\\\\Class_\\\\RenamePropertyToMatchTypeRector\\\\Source\\\\ContainerInterface\\|Symfony\\\\Component\\\\DependencyInjection\\\\Container\\|null\\) does not accept Psr\\\\Container\\\\ContainerInterface#"
        - "#Static property Symplify\\\\PackageBuilder\\\\Tests\\\\AbstractKernelTestCase\\:\\:\\$container \\(Psr\\\\Container\\\\ContainerInterface\\) does not accept Rector\\\\Naming\\\\Tests\\\\Rector\\\\Class_\\\\RenamePropertyToMatchTypeRector\\\\Source\\\\ContainerInterface\\|Symfony\\\\Component\\\\DependencyInjection\\\\Container#"
        -
            message: "#Else branch is unreachable because ternary operator condition is always true#"
            path: rules/psr4/src/Composer/PSR4NamespaceMatcher.php

        - "#Parameter \\#1 \\$arrayItem of method Rector\\\\NetteKdyby\\\\NodeResolver\\\\ListeningMethodsCollector\\:\\:resolveCustomClassMethodAndEventClass\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\ArrayItem, PhpParser\\\\Node given#"
        -
            message: "#Class \"Rector\\\\RectorGenerator\\\\ValueObject\\\\RectorRecipe\" has invalid namespace category \"ValueObject\"\\. Pick one of\\: \"\"#"
            path: packages/rector-generator/src/ValueObject/RectorRecipe.php

        - "#Parameter \\#2 \\$currentNode of method Rector\\\\CodingStyle\\\\Rector\\\\Assign\\\\ManualJsonStringToJsonEncodeArrayRector\\:\\:matchNextExprAssignConcatToSameVariable\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\Assign\\|PhpParser\\\\Node\\\\Expr\\\\AssignOp\\\\Concat, PhpParser\\\\Node given#"
        -
            message: "#Array (with keys|destruct) is not allowed\\. Use value object to pass data instead#"
            paths:
                - rules/php70/src/EregToPcreTransformer.php
                - packages/changes-reporting/src/Output/JsonOutputFormatter.php
                - packages/rector-generator/src/TemplateVariablesFactory.php
                - rules/doctrine/src/Collector/UuidMigrationDataCollector.php

        -
            message: "#Use explicit return value over magic &reference#"
            paths:
                - rules/php70/src/EregToPcreTransformer.php

        - "#Cannot access property \\$key on PhpParser\\\\Node\\\\Expr\\\\ArrayItem\\|null#"
        -
            message: "#Use explicit return value over magic &reference#"
            path: rules/dead-code/src/Rector/BinaryOp/RemoveDuplicatedInstanceOfRector.php

        -
            message: "#Use value object over return of values#"
            path: rules/phpunit/src/Composer/ComposerAutoloadedDirectoryProvider.php

        -
            message: "#Use value object over return of values#"
            path: rules/php70/src/EregToPcreTransformer.php

        - "#Do not use static calls#"
        - "#Too many public elements on class \\- \\d+\\. Try narrow it down under 10#"
        - "#Variable \"\\$attributeAwareFullyQualifiedIdentifierTypeNode\" is too long with 46 chars\\. Narrow it under 40 chars#"
        - "#Class cognitive complexity for \"(NodeTypeResolver|EregToPcreTransformer|DumpNodesCommand)\" is \\d+, keep it under 50#"
        - "#Variable \"\\$inverseJoinColumnsOpeningAndClosingSpace\" is too long with \\d+ chars\\. Narrow it under 40 chars#"
        - "#Class cognitive complexity for \"NodeRepository\" is \\d+, keep it under 50#"
        - "#Use another value object over string with value object arrays#"
        - "#Use decouled factory service to create \"(.*?)\" object#"
        - "#Post operation are forbidden, as they make 2 values at the same line\\. Use pre instead#"
        - "#Use value object over multi array assign#"
        - "#(.*?) expects class\\-string, string given#"
        - "#Method \"(.*?)\" is using too many parameters \\- \\d+\\. Make it under 8#"
        -
            message: "#Instead of \"Symfony\\\\Component\\\\Finder\\\\SplFileInfo\" class/interface use \"Symplify\\\\SmartFileSystem\\\\SmartFileInfo\"#"
            paths:
                - src/FileSystem/FilesFinder.php

        -
            message: "#Node \"errorsuppress\" is fobidden to use#"
            paths:
                - rules/symfony/src/ServiceMapProvider.php
                - utils/project-validator/src/CpuCoreCountResolver.php

        -
            message: "#Instead of container injection, use specific service#"
            paths:
                - src/Configuration/RectorClassesProvider.php

        - "#Parameter \\#2 \\$stmts of class PhpParser\\\\Node\\\\Stmt\\\\Namespace_ constructor expects array<PhpParser\\\\Node\\\\Stmt\\>\\|null, array<PhpParser\\\\Node\\> given#"
        -
            message: "#Nested foreach with empty statement is not allowed#"
            paths:
                - packages/better-php-doc-parser/tests/PhpDocParser/TagValueNodeReprint/TagValueNodeReprintTest.php

        -
            message: "#Function \"dump\\(\\)\" cannot be used/left in the code#"
            paths:
                - tests/debug_functions.php

        - "#Method Rector\\\\Utils\\\\PHPStanAttributeTypeSyncer\\\\NodeFactory\\\\AttributeAwareClassFactoryFactory\\:\\:createFromPhpDocParserNodeClass\\(\\) should return PhpParser\\\\Node\\\\Stmt\\\\Namespace_ but returns PhpParser\\\\Node#"
        - "#Method Rector\\\\Utils\\\\PHPStanAttributeTypeSyncer\\\\NodeFactory\\\\AttributeAwareClassFactory\\:\\:createFromPhpDocParserNodeClass\\(\\) should return PhpParser\\\\Node\\\\Stmt\\\\Namespace_ but returns PhpParser\\\\Node#"
        - "#Method Rector\\\\NetteKdyby\\\\NodeFactory\\\\EventValueObjectClassFactory\\:\\:wrapClassToNamespace\\(\\) should return PhpParser\\\\Node\\\\Stmt\\\\Namespace_ but returns PhpParser\\\\Node#"
        -
            message: "#Do not use factory/method call in constructor, put factory in config and get service with dependency injection#"
            paths:
                - packages/phpstan-static-type-mapper/src/PHPStanStaticTypeMapper.php
                - rules/nette-code-quality/src/NodeResolver/MethodNamesByInputNamesResolver.php

        -
            message: "#new <class\\> is limited to 3 \"new <class\\>\\(new <class\\>\\)\\)\" nesting to each other\\. You have \\d+ nesting#"
            paths:
                - *Rector.php
                - packages/caching/src/Config/FileHashComputer.php

        -
            message: "#Property with protected modifier is not allowed\\. Use interface instead#"
            paths:
                - packages/better-php-doc-parser/src/ValueObject/PhpDocNode/AbstractTagValueNode.php
                - rules/naming/src/Guard/PropertyConflictingNameGuard/AbstractPropertyConflictingNameGuard.php
                - rules/naming/src/PropertyRenamer/AbstractPropertyRenamer.php
                - rules/downgrade-php71/src/Rector/FunctionLike/AbstractMaybeAddDocBlockRector.php
                - packages/testing/src/PHPUnit/AbstractGenericRectorTestCase.php
                - packages/testing/src/PHPUnit/AbstractRectorTestCase.php

        - "#Method call in if or elseif is not allowed#"
        - "#Method or Static call in foreach is not allowed#"
        -
            message: "#Do not use static property#"
            paths:
                - packages/doctrine-annotation-generated/src/DataCollector/ResolvedConstantStaticCollector.php
                - packages/testing/src/PHPUnit/AbstractGenericRectorTestCase.php

        -
            message: "#Do not use factory/method call in constructor, put factory in config and get service with dependency injection#"
            paths:
                - packages/node-type-resolver/src/DependencyInjection/PHPStanServicesFactory.php
                - rules/nette-to-symfony/src/Rector/ClassMethod/RenameEventNamesInEventSubscriberRector.php
                - rules/type-declaration/src/Exception/ConflictingPriorityException.php
                - src/Console/Application.php
                - src/Exception/Application/FileProcessingException.php
                - src/Php/TypeAnalyzer.php
                - src/PhpParser/NodeTraverser/RectorNodeTraverser.php

        -
            message: "#Use namespaceName on Class_ node#"
            paths:
                - packages/node-collector/src/NodeCollector/ParsedNodeCollector.php
                - packages/node-name-resolver/src/NodeNameResolver/ClassNameResolver.php
                - rules/coding-style/src/Rector/Use_/RemoveUnusedAliasRector.php
                - rules/doctrine-gedmo-to-knplabs/src/Rector/Class_/TranslationBehaviorRector.php
                - rules/generic/src/Rector/Class_/ActionInjectionToConstructorInjectionRector.php
                - rules/nette-to-symfony/src/Rector/Class_/NetteControlToSymfonyControllerRector.php
                - rules/php-spec-to-phpunit/src/Naming/PhpSpecRenaming.php
                - rules/php70/src/Rector/ClassMethod/Php4ConstructorRector.php
                - rules/symfony-code-quality/src/Rector/Class_/EventListenerToEventSubscriberRector.php
                - utils/doctrine-annotation-parser-syncer/src/Rector/Namespace_/RenameAnnotationReaderClassRector.php
                - utils/doctrine-annotation-parser-syncer/src/Rector/Namespace_/RenameDocParserClassRector.php

        -
            message: "#Do not use setter on a service#"
            paths:
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwareExtendsTagValueNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwareImplementsTagValueNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwareMethodTagValueNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwareMethodTagValueParameterNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwareParamTagValueNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwarePhpDocNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwarePropertyTagValueNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwareReturnTagValueNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwareThrowsTagValueNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/PhpDoc/AttributeAwareVarTagValueNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/Type/AttributeAwareArrayShapeItemNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/Type/AttributeAwareArrayShapeNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/Type/AttributeAwareArrayTypeNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/Type/AttributeAwareCallableTypeNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/Type/AttributeAwareGenericTypeNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/Type/AttributeAwareIntersectionTypeNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/Type/AttributeAwareNullableTypeNodeFactory.php
                - packages/attribute-aware-php-doc/src/AttributeAwareNodeFactory/Type/AttributeAwareUnionTypeNodeFactory.php
                - packages/better-php-doc-parser/src/PhpDocNodeFactory/PHPUnitDataProviderDocNodeFactory.php
                - packages/better-php-doc-parser/src/PhpDocNodeFactory/ParamPhpDocNodeFactory.php
                - packages/node-type-resolver/src/FileSystem/CurrentFileInfoProvider.php
                - packages/phpstan-static-type-mapper/src/TypeMapper/ObjectTypeMapper.php
                - packages/phpstan-static-type-mapper/src/TypeMapper/ObjectWithoutClassTypeMapper.php
                - packages/rector-generator/src/Rector/Closure/AddNewServiceToSymfonyPhpConfigRector.php
                - rules/nette-code-quality/src/FormControlTypeResolver/AssignedVariablesMethodCallsFormTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/ClassMethodFormTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/ConstructorFormControlTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/GetComponentMethodCallFormControlTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/MagicNetteFactoryInterfaceFormControlTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/MethodCallFormControlTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/NewFormControlTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/ReturnFormControlTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/ThisVariableInAnotherMethodFormControlTypeResolver.php
                - rules/nette-code-quality/src/FormControlTypeResolver/VariableConstructorFormControlTypeResolver.php
                - src/Configuration/ChangeConfiguration.php
                - src/Configuration/Configuration.php
                - src/Configuration/CurrentNodeProvider.php
                - src/HttpKernel/RectorKernel.php
                - packages/testing/src/NodeVisitor/AttributeCollectingNodeVisitor.php

        - "#Parameter \\#1 \\$node of method Rector\\\\DeadCode\\\\Rector\\\\Plus\\\\RemoveDeadZeroAndOneOperationRector\\:\\:refactor\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\AssignOp\\\\Div\\|PhpParser\\\\Node\\\\Expr\\\\AssignOp\\\\Minus\\|PhpParser\\\\Node\\\\Expr\\\\AssignOp\\\\Mul\\|PhpParser\\\\Node\\\\Expr\\\\AssignOp\\\\Plus\\|PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Div\\|PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Minus\\|PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Mul\\|PhpParser\\\\Node\\\\Expr\\\\BinaryOp\\\\Plus, PhpParser\\\\Node\\\\Expr\\\\AssignOp\\|PhpParser\\\\Node\\\\Expr\\\\BinaryOp given#"
        - "#Cognitive complexity for \"Rector\\\\CodeQuality\\\\Naming\\\\MethodCallToVariableNameResolver\\:\\:resolveVariableName\\(\\)\" is 12, keep it under 9#"
        -
            message: "#Do not use trait#"
            paths:
                - packages/**/src/Behavior/**
                - packages/better-php-doc-parser/src/Attributes/Attribute/AttributeTrait.php
                - packages/better-php-doc-parser/src/PartPhpDocTagPrinter/Behavior/ArrayPartPhpDocTagPrinterTrait.php
                - packages/better-php-doc-parser/src/PhpDocNode/PrintTagValueNodeTrait.php
                - packages/changes-reporting/src/Rector/AbstractRector/NotifyingRemovingNodeTrait.php
                - packages/post-rector/src/Rector/AbstractRector/NodeCommandersTrait.php
                - packages/reporting/src/Rector/AbstractRector/NodeReportCollectorTrait.php
                - rules/doctrine/src/AbstractRector/DoctrineTrait.php
                - src/Rector/AbstractRector/AbstractRectorTrait.php
                - src/Rector/AbstractRector/BetterStandardPrinterTrait.php
                - src/Rector/AbstractRector/CallableNodeTraverserTrait.php
                - src/Rector/AbstractRector/ComplexRemovalTrait.php
                - src/Rector/AbstractRector/ConstFetchAnalyzerTrait.php
                - src/Rector/AbstractRector/NameResolverTrait.php
                - src/Rector/AbstractRector/NodeCommentingTrait.php
                - src/Rector/AbstractRector/NodeFactoryTrait.php
                - src/Rector/AbstractRector/NodeTypeResolverTrait.php
                - src/Rector/AbstractRector/PhpDocTrait.php
                - src/Rector/AbstractRector/RemovedAndAddedFilesTrait.php
                - src/Rector/AbstractRector/ValueResolverTrait.php
                - src/Rector/AbstractRector/VisibilityTrait.php

        -
            message: "#Do not use scalar or array as constructor parameter\\. Use \"Symplify\\\\PackageBuilder\\\\Parameter\\\\ParameterProvider\" service instead#"
            paths:
                - packages/attribute-aware-php-doc/src/Ast/PhpDoc/AttributeAwareDataProviderTagValueNode.php
                - packages/attribute-aware-php-doc/src/Ast/PhpDoc/AttributeAwareParamTagValueNode.php
                - packages/attribute-aware-php-doc/src/Ast/PhpDoc/AttributeAwareParamTagValueNode.php
                - packages/attribute-aware-php-doc/src/Ast/PhpDoc/AttributeAwareParamTagValueNode.php
                - packages/attribute-aware-php-doc/src/Ast/PhpDoc/AttributeAwareParamTagValueNode.php
                - packages/attribute-aware-php-doc/src/Ast/PhpDoc/AttributeAwareTemplateTagValueNode.php
                - packages/attribute-aware-php-doc/src/Ast/PhpDoc/AttributeAwareTemplateTagValueNode.php
                - packages/attribute-aware-php-doc/src/Ast/PhpDoc/AttributeAwareTemplateTagValueNode.php
                - packages/attribute-aware-php-doc/src/Ast/Type/AttributeAwareArrayShapeItemNode.php
                - packages/attribute-aware-php-doc/src/Ast/Type/AttributeAwareArrayShapeItemNode.php
                - packages/attribute-aware-php-doc/src/Ast/Type/AttributeAwareArrayShapeItemNode.php
                - packages/attribute-aware-php-doc/src/Ast/Type/AttributeAwareUnionTypeNode.php
                - packages/better-php-doc-parser/src/PhpDocInfo/PhpDocInfo.php
                - rules/coding-style/src/Rector/ClassMethod/YieldClassMethodToArrayClassMethodRector.php
                - rules/php70/src/EregToPcreTransformer.php
                - rules/phpstan/src/Type/AliasedObjectType.php
                - rules/phpstan/src/Type/AliasedObjectType.php
                - rules/phpstan/src/Type/ShortenedObjectType.php
                - rules/phpstan/src/Type/ShortenedObjectType.php
                - rules/restoration/src/Rector/Class_/RemoveUselessJustForSakeInterfaceRector.php
                - rules/type-declaration/src/Rector/FunctionLike/ReturnTypeDeclarationRector.php
                - src/Configuration/MinimalVersionChecker.php
                - src/Configuration/MinimalVersionChecker/ComposerJsonParser.php
                - src/Configuration/MinimalVersionChecker/ComposerJsonReader.php
                - src/PhpParser/Builder/UseBuilder.php
                - src/RectorDefinition/CodeSample.php
                - src/RectorDefinition/CodeSample.php
                - src/RectorDefinition/CodeSample.php
                - src/RectorDefinition/ComposerJsonAwareCodeSample.php
                - src/RectorDefinition/ComposerJsonAwareCodeSample.php
                - src/RectorDefinition/ComposerJsonAwareCodeSample.php
                - src/RectorDefinition/ComposerJsonAwareCodeSample.php
                - src/RectorDefinition/ConfiguredCodeSample.php
                - src/RectorDefinition/ConfiguredCodeSample.php
                - src/RectorDefinition/ConfiguredCodeSample.php
                - src/RectorDefinition/RectorDefinition.php
                - packages/testing/src/PHPUnit/Runnable/NodeVisitor/PrefixingClassLikeNamesNodeVisitor.php
                - packages/testing/src/PHPUnit/Runnable/NodeVisitor/PrefixingClassLikeNamesNodeVisitor.php

        -
            message: "#Use local named constant instead of inline string for regex to explain meaning by constant name#"
            paths:
                - packages/better-php-doc-parser/src/PartPhpDocTagPrinter/Behavior/ArrayPartPhpDocTagPrinterTrait.php
                - packages/better-php-doc-parser/src/PartPhpDocTagPrinter/Behavior/ArrayPartPhpDocTagPrinterTrait.php
                - packages/better-php-doc-parser/src/PartPhpDocTagPrinter/Behavior/ArrayPartPhpDocTagPrinterTrait.php
                - packages/better-php-doc-parser/src/PhpDocNode/PrintTagValueNodeTrait.php

        -
            message: "#new <class\\> is limited to 3 \"new <class\\>\\(new <class\\>\\)\\)\" nesting to each other\\. You have \\d+ nesting#"
            path: config/set/*

        - "#Cognitive complexity for \"Rector\\\\CodeQuality\\\\Naming\\\\MethodCallToVariableNameResolver\\:\\:resolveVariableName\\(\\)\" is 12, keep it under 9#"
        - "#Parameter \\#1 \\$nodes of method Rector\\\\Core\\\\PhpParser\\\\Node\\\\BetterNodeFinder\\:\\:findFirst\\(\\) expects array<PhpParser\\\\Node\\>\\|PhpParser\\\\Node, array<PhpParser\\\\Node\\\\Stmt\\>\\|null given#"
        - "#Method Rector\\\\SOLID\\\\Rector\\\\Assign\\\\MoveVariableDeclarationNearReferenceRector\\:\\:findFirstVariableUsageInScope\\(\\) should return PhpParser\\\\Node\\\\Expr\\\\Variable\\|null but returns PhpParser\\\\Node\\|null#"
        - "#Class with base \"NodeNameResolver\" name is already used in \"Symplify\\\\PHPStanRules\\\\PhpParser\\\\NodeNameResolver\", \"Rector\\\\NodeNameResolver\\\\NodeNameResolver\"\\. Use unique name to make classes easy to recognize#"
        - "#Static property Rector\\\\Testing\\\\PHPUnit\\\\AbstractGenericRectorTestCase\\:\\:\\$allRectorContainer \\(Rector\\\\Naming\\\\Tests\\\\Rector\\\\Class_\\\\RenamePropertyToMatchTypeRector\\\\Source\\\\ContainerInterface\\|Symfony\\\\Component\\\\DependencyInjection\\\\Container\\|null\\) does not accept Psr\\\\Container\\\\ContainerInterface#"
        - "#Class with base \"Application\" name is already used in \"(.*?)\\\\Symfony\\\\Component\\\\Console\\\\Application\", \"Symfony\\\\Component\\\\Console\\\\Application\", \"Rector\\\\Core\\\\Console\\\\Application\"\\. Use unique name to make classes easy to recognize#"
        - "#Class with base \"FileNode\" name is already used in \"PHPStan\\\\Node\\\\FileNode\", \"Rector\\\\Core\\\\PhpParser\\\\Node\\\\CustomNode\\\\FileNode\"\\. Use unique name to make classes easy to recognize#"
        -
            message: "#Node \"errorsuppress\" is fobidden to use#"
            paths:
                - tests/Issues/Issue4499/DoNotDuplicateCode/DoNotDuplicateCodeTest.php

        - "#Call to an undefined method Rector\\\\PostRector\\\\Rector\\\\AbstractPostRector\\:\\:isObjectType\\(\\)#"
        - "#Parameter \\#1 \\$expr of class PhpParser\\\\Node\\\\Stmt\\\\Expression constructor expects PhpParser\\\\Node\\\\Expr, PhpParser\\\\Node\\\\Expr\\|PhpParser\\\\Node\\\\Stmt given#"
        -
            message: "#Class cognitive complexity is \\d+, keep it under 50#"
            paths:
                - rules/php70/src/EregToPcreTransformer.php
                - packages/node-collector/src/NodeCollector/NodeRepository.php
                - packages/node-type-resolver/src/NodeTypeResolver.php

        - "#Use decoupled factory service to create \"(.*?)\" object#"
        - "#Use \"\\$class\\-\\>namespaceName\" instead of \"\\$class\\-\\>name\" that only returns short class name#"
        - "#Use another value object over array with string\\-keys and objects, array<string, ValueObject\\>#"
        - "#SymfonyStyle usage is unneeded for only newline, write, and/or writeln, use PHP_EOL and concatenation instead#"
        - "#Trait method \"(.*?)\" should not contain any logic, but only delegate to other class call#"
        - "#Do not use factory/method call in constructor\\. Put factory in config and get service with dependency injection#"
        - "#Property with protected modifier is not allowed\\. Use interface contract method instead#"
        - "#Constant string value need to only have small letters, _, \\-, \\. and numbers#"
        -
            message: "#Use explicit names over dynamic ones#"
            paths:
                - packages/doctrine-annotation-generated/src/PhpDocNode/ConstantReferenceIdentifierRestorer.php
                - packages/doctrine-annotation-generated/src/PhpDocNode/ConstantReferenceIdentifierRestorer.php

        -
            message: "#SymfonyStyle service is not needed for only newline and text echo\\. Use PHP_EOL and concatenation instead#"
            paths:
                - packages/changes-reporting/src/Output/CheckstyleOutputFormatter.php
                - packages/changes-reporting/src/Output/JsonOutputFormatter.php
                - src/Console/Output/RectorConfigurationFormatter.php

        - "#Instanceof between PhpParser\\\\Node\\\\Stmt and Rector\\\\Core\\\\PhpParser\\\\Node\\\\CustomNode\\\\FileWithoutNamespace will always evaluate to false#"
        - "#Class with base \"Regex\" name is already used in \"MongoDB\\\\BSON\\\\Regex\", \"Symplify\\\\PHPStanRules\\\\ValueObject\\\\Regex\"\\. Use unique name to make classes easy to recognize#"
        - "#Method Rector\\\\BetterPhpDocParser\\\\Tests\\\\PhpDocInfo\\\\PhpDocInfo\\\\PhpDocInfoTest\\:\\:createPhpDocInfoFromFile\\(\\) should return Rector\\\\BetterPhpDocParser\\\\PhpDocInfo\\\\PhpDocInfo but returns Rector\\\\BetterPhpDocParser\\\\PhpDocInfo\\\\PhpDocInfo\\|null#"
        -
            message: "#Class cognitive complexity is \\d+, keep it under 40#"
            paths:
                - src/Rector/AbstractRector.php
                - rules/php80/src/Rector/If_/NullsafeOperatorRector.php
                - rules/code-quality/src/Rector/For_/ForToForeachRector.php
                - rules/coding-style/src/Rector/Use_/RemoveUnusedAliasRector.php

