<?php

declare (strict_types=1);
namespace _PhpScopere8e811afab72;

use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Assign\ManualJsonStringToJsonEncodeArrayRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Assign\SplitDoubleAssignRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Catch_\CatchExceptionNameMatchingTypeRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Class_\AddArrayDefaultToArrayPropertyRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassConst\SplitGroupedConstantsAndPropertiesRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassConst\VarConstantCommentRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassMethod\MakeInheritedMethodVisibilitySameAsParentRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassMethod\NewlineBeforeNewAssignSetRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassMethod\RemoveDoubleUnderscoreInMethodNameRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Encapsed\EncapsedStringsToSprintfRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Encapsed\WrapEncapsedVariableInCurlyBracesRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\CallUserFuncCallToVariadicRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\ConsistentImplodeRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\ConsistentPregDelimiterRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\FunctionCallToConstantRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\VersionCompareFuncCallToConstantRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Function_\CamelCaseFunctionNamingToUnderscoreRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\If_\NullableCompareToNullRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Include_\FollowRequireByDirRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Plus\UseIncrementAssignRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\PostInc\PostIncDecToPreIncDecRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\String_\SplitStringClassConstantToClassConstFetchRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\String_\SymplifyQuoteEscapeRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Switch_\BinarySwitchToIfElseRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Ternary\TernaryConditionVariableAssignmentRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Use_\RemoveUnusedAliasRector;
use _PhpScopere8e811afab72\Rector\CodingStyle\Rector\Use_\SplitGroupedUseImportsRector;
use _PhpScopere8e811afab72\Rector\Php55\Rector\String_\StringClassNameToClassConstantRector;
use _PhpScopere8e811afab72\Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;
return static function (\_PhpScopere8e811afab72\Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator $containerConfigurator) : void {
    $services = $containerConfigurator->services();
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\If_\NullableCompareToNullRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Switch_\BinarySwitchToIfElseRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\ConsistentImplodeRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Ternary\TernaryConditionVariableAssignmentRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Use_\RemoveUnusedAliasRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\String_\SymplifyQuoteEscapeRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassConst\SplitGroupedConstantsAndPropertiesRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\String_\SplitStringClassConstantToClassConstFetchRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\Php55\Rector\String_\StringClassNameToClassConstantRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\ConsistentPregDelimiterRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Include_\FollowRequireByDirRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Catch_\CatchExceptionNameMatchingTypeRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Plus\UseIncrementAssignRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Assign\SplitDoubleAssignRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassConst\VarConstantCommentRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Encapsed\EncapsedStringsToSprintfRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Encapsed\WrapEncapsedVariableInCurlyBracesRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassMethod\NewlineBeforeNewAssignSetRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Assign\ManualJsonStringToJsonEncodeArrayRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Class_\AddArrayDefaultToArrayPropertyRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassMethod\MakeInheritedMethodVisibilitySameAsParentRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\CallUserFuncCallToVariadicRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\VersionCompareFuncCallToConstantRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\FunctionCallToConstantRector::class)->call('configure', [[\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\FuncCall\FunctionCallToConstantRector::FUNCTIONS_TO_CONSTANTS => ['php_sapi_name' => 'PHP_SAPI', 'pi' => 'M_PI']]]);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Function_\CamelCaseFunctionNamingToUnderscoreRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\Use_\SplitGroupedUseImportsRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\ClassMethod\RemoveDoubleUnderscoreInMethodNameRector::class);
    $services->set(\_PhpScopere8e811afab72\Rector\CodingStyle\Rector\PostInc\PostIncDecToPreIncDecRector::class);
};
