<?php

declare (strict_types=1);
namespace RectorPrefix2020DecSat;

use Rector\Renaming\Rector\MethodCall\RenameMethodRector;
use Rector\Renaming\Rector\Name\RenameClassRector;
use Rector\Renaming\ValueObject\MethodCallRename;
use Rector\Transform\Rector\Assign\PropertyToMethodRector;
use Rector\Transform\ValueObject\PropertyToMethod;
use RectorPrefix2020DecSat\Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator;
use Symplify\SymfonyPhpConfig\ValueObjectInliner;
return static function (\RectorPrefix2020DecSat\Symfony\Component\DependencyInjection\Loader\Configurator\ContainerConfigurator $containerConfigurator) : void {
    $services = $containerConfigurator->services();
    # source: https://book.cakephp.org/3.0/en/appendices/3-6-migration-guide.html
    $services->set(\Rector\Renaming\Rector\MethodCall\RenameMethodRector::class)->call('configure', [[\Rector\Renaming\Rector\MethodCall\RenameMethodRector::METHOD_CALL_RENAMES => \Symplify\SymfonyPhpConfig\ValueObjectInliner::inline([new \Rector\Renaming\ValueObject\MethodCallRename('RectorPrefix2020DecSat\\Cake\\ORM\\Table', 'association', 'getAssociation'), new \Rector\Renaming\ValueObject\MethodCallRename('RectorPrefix2020DecSat\\Cake\\Validation\\ValidationSet', 'isPresenceRequired', 'requirePresence'), new \Rector\Renaming\ValueObject\MethodCallRename('RectorPrefix2020DecSat\\Cake\\Validation\\ValidationSet', 'isEmptyAllowed', 'allowEmpty')])]]);
    $services->set(\Rector\Transform\Rector\Assign\PropertyToMethodRector::class)->call('configure', [[\Rector\Transform\Rector\Assign\PropertyToMethodRector::PROPERTIES_TO_METHOD_CALLS => \Symplify\SymfonyPhpConfig\ValueObjectInliner::inline([new \Rector\Transform\ValueObject\PropertyToMethod('RectorPrefix2020DecSat\\Cake\\Controller\\Controller', 'name', 'getName', 'setName'), new \Rector\Transform\ValueObject\PropertyToMethod('RectorPrefix2020DecSat\\Cake\\Controller\\Controller', 'plugin', 'getPlugin', 'setPlugin'), new \Rector\Transform\ValueObject\PropertyToMethod('RectorPrefix2020DecSat\\Cake\\Form\\Form', 'validator', 'getValidator', 'setValidator')])]]);
    $services->set(\Rector\Renaming\Rector\Name\RenameClassRector::class)->call('configure', [[\Rector\Renaming\Rector\Name\RenameClassRector::OLD_TO_NEW_CLASSES => ['RectorPrefix2020DecSat\\Cake\\Cache\\Engine\\ApcEngine' => 'RectorPrefix2020DecSat\\Cake\\Cache\\Engine\\ApcuEngine', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\BadRequestException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\BadRequestException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\ConflictException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\ConflictException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\ForbiddenException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\ForbiddenException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\GoneException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\GoneException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\HttpException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\HttpException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\InternalErrorException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\InternalErrorException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\InvalidCsrfTokenException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\InvalidCsrfTokenException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\MethodNotAllowedException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\MethodNotAllowedException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\NotAcceptableException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\NotAcceptableException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\NotFoundException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\NotFoundException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\NotImplementedException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\NotImplementedException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\ServiceUnavailableException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\ServiceUnavailableException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\UnauthorizedException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\UnauthorizedException', 'RectorPrefix2020DecSat\\Cake\\Network\\Exception\\UnavailableForLegalReasonsException' => 'RectorPrefix2020DecSat\\Cake\\Http\\Exception\\UnavailableForLegalReasonsException', 'RectorPrefix2020DecSat\\Cake\\Network\\Session' => 'RectorPrefix2020DecSat\\Cake\\Http\\Session', 'RectorPrefix2020DecSat\\Cake\\Network\\Session\\DatabaseSession' => 'RectorPrefix2020DecSat\\Cake\\Http\\Session\\DatabaseSession', 'RectorPrefix2020DecSat\\Cake\\Network\\Session\\CacheSession' => 'RectorPrefix2020DecSat\\Cake\\Http\\Session\\CacheSession', 'RectorPrefix2020DecSat\\Cake\\Network\\CorsBuilder' => 'RectorPrefix2020DecSat\\Cake\\Http\\CorsBuilder', 'RectorPrefix2020DecSat\\Cake\\View\\Widget\\WidgetRegistry' => 'RectorPrefix2020DecSat\\Cake\\View\\Widget\\WidgetLocator']]]);
};
